    
name: GraalVM build
on:
  workflow_dispatch:
# permissions:
#       id-token: write # This is required for requesting the JWT
#       contents: read  # This is required for actions/checkout
jobs:
  build-my-app:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
            java-version: '11'
            distribution: 'adopt'
      - name: install dependencies
        uses: umeda-shintaro/setup-graalvm@main
        with:
          version: '22.3.2'
          java-version: '11'
          components: 'native-image'
          github-token: ${{ secrets.ACTION_TOKEN }}
      - name: Build step
        run: |
          echo "GRAALVM_HOME: $GRAALVM_HOME"
          echo "JAVA_HOME: $JAVA_HOME"
          java --version
          gu --version
          native-image --version
          ./gradlew :microservices:product-service:bootBuildImage --no-daemon
#           ./gradlew :microservices:product-composite-service:bootBuildImage --no-daemon
#           ./gradlew :microservices:recommendation-service:bootBuildImage --no-daemon
#           ./gradlew :microservices:review-service:bootBuildImage --no-daemon


      - uses: umeda-shintaro/configure-aws-credentials@master
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: umeda-shintaro/amazon-ecr-login@master
        
      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: my-ecr-repo
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker tag hands-on/native-product-composite-service:latest $REGISTRY/$REPOSITORY:$IMAGE_TAG
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
          
#       - name: setup helm
#         uses: umeda-shintaro/setup-helm@main
#         with:
#          version: 'v3.5.4' 
#         id: install 

#       - run: |
#           echo "HELM_EXPERIMENTAL_OCI=1" >> "$GITHUB_ENV"
#       - name: Package and push helm chart to Amazon ECR
#         env:
#           REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#           REPOSITORY: kubernetes/helm/environments/dev-env-native
#         run: |
#           for f in kubernetes/helm/components/*; do helm dep up $f; done
#           for f in kubernetes/helm/environments/*; do helm dep up $f; done
#           helm package $REPOSITORY
#           helm chart push dev-env-native-1.0.0.tgz oci://$REGISTRY
