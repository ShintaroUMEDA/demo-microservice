name: Helm2ECR

on:
  workflow_dispatch:
  push:
    branches: [ ghaction_test ]
  pull_request:
    branches: [ ghaction_test ]
permissions:
      id-token: write # This is required for requesting the JWT
      contents: read  # This is required for actions/checkout
jobs:
  build:

    runs-on: [ self-hosted ]
    

    steps:
    - uses: actions/checkout@v3
#     - name: assume role
#       uses: umeda-shintaro/aws-cli@master
#       with:
#         args: sts assume-role --role-arn arn:aws:iam::550013351950:role/umeda-githubci-role --role-session-name AWSCLI-Session
#       env:
#         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         AWS_DEFAULT_REGION: ap-northeast-1
#     - name: Configure AWS credentials
#       run: |
#         aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
#         aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         aws configure set default.region ${{ secrets.AWS_REGION }}
#         aws sts assume-role --role-arn ${{ secrets.AWS_ROLE_ARN }} --role-session-name AWSCLI-Session
    - run: |
        echo "NODE_OPTIONS=--trace-warnings" >> "$GITHUB_ENV"
        echo "aws-access-key-id=${{ secrets.AWS_ACCESS_KEY_ID }}" >> "$GITHUB_ENV"
        echo "aws-secret-access-key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> "$GITHUB_ENV"
    - uses: umeda-shintaro/configure-aws-credentials@master
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-1
#         role-to-assume: arn:aws:iam::550013351950:role/umeda-githubci-role
#         role-duration-seconds: 1200
#         role-session-name: MySessionName

    - name: Login to Amazon ECR
      id: login-ecr
      uses: umeda-shintaro/amazon-ecr-login@master

    - name: Package and push helm chart to Amazon ECR
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: kubernetes/helm/environments/dev-env-native
      run: |
        helm package $REPOSITORY
        helm push dev-env-native-1.0.0.tgz oci://$REGISTRY
        
        
