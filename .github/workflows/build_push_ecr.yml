name: build and push 
on:
  workflow_dispatch:
# TODO:マトリックスとキャッシュで高速化する  
# TODO:リポジトリ名をdemo-microserviceにする
jobs:
  setup-env:
    runs-on: self-hosted
    
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
            java-version: '11'
            distribution: 'adopt'
      - name: install dependencies
        uses: umeda-shintaro/setup-graalvm@main
        with:
          version: '21.1.0'
          java-version: '11'
          components: 'native-image'
          github-token: ${{ secrets.ACTION_TOKEN }}
      
#   build-native-app:
#     runs-on: self-hosted
#     needs: setup-env
#     strategy:
#       max-parallel: 2
#       matrix:
#         native-services: [product-composite,product,recommendation,review]
#     steps:
      - name: Build native app
        run: |
          echo "GRAALVM_HOME: $GRAALVM_HOME"
          echo "JAVA_HOME: $JAVA_HOME"
          java --version
          gu --version
          native-image --version
          ./gradlew :microservices:product-composite-service:bootBuildImage --no-daemon  --debug
          ./gradlew :microservices:product-service:bootBuildImage --no-daemon
          ./gradlew :microservices:recommendation-service:bootBuildImage --no-daemon
          ./gradlew :microservices:review-service:bootBuildImage --no-daemon
          
#   push-images:
#     runs-on: self-hosted
#     needs: build-native-app
#     steps:
      - name: setup aws credentials
        uses: umeda-shintaro/configure-aws-credentials@master
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: umeda-shintaro/amazon-ecr-login@master
        
      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          ./gradlew build -x generateAot -x generateTestAot
          docker compose build
          docker images
          for REPOSITORY in hands-on/auth-server hands-on/native-product-composite-service hands-on/native-product-service hands-on/native-recommendation-service hands-on/native-review-service; do
          docker tag $REPOSITORY:latest $REGISTRY/$REPOSITORY:$IMAGE_TAG
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
          done
          # TODO: yamlからイメージ名:タグを取得する
          for REPOSITORY in wurstmeister/kafka:2.12-2.5.0 zookeeper:3.4.14 mongo:4.4.2 mysql:5.7.32; do
          docker tag $REPOSITORY $REGISTRY/$REPOSITORY
          docker push $REGISTRY/$REPOSITORY
          done
           
          
          
#       - name: setup helm
#         uses: umeda-shintaro/setup-helm@main
#         with:
#          version: 'v3.5.4' 
#         id: install 
#       - run: |
#           echo "HELM_EXPERIMENTAL_OCI=1" >> "$GITHUB_ENV"
#       - name: Package and push helm chart to Amazon ECR
#         env:
#           REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#           REPOSITORY: kubernetes/helm/environments/dev-env-native
#         run: |
#           for f in kubernetes/helm/components/*; do helm dep up $f; done
#           for f in kubernetes/helm/environments/*; do helm dep up $f; done
#           helm package $REPOSITORY
#           helm chart push dev-env-native-1.0.0.tgz oci://$REGISTRY
